---

- name: Pull image
  docker_image:
    name: "{{ loadbalancer_image }}"

- name: Prepare folders
  file: path={{ item }} state=directory
  with_items:
    - "/etc/consul-templates"
    - "/etc/letsencrypt"
    - "/etc/nginx/conf.d"
    - "/etc/service/nginx"
    - "{{ loadbalancer_webroot_path }}"

- name: Upload nginx service file
  copy:
    src: nginx.service
    dest: /etc/service/nginx/run
    mode: "a+x"

- name: Assemble default nginx config
  template:
    src: default.conf.j2
    dest: /etc/nginx/conf.d/default.conf

- name: Run container
  docker_container:
    name: "{{ loadbalancer_container_name }}"
    image: "{{ loadbalancer_image }}"
    state: started
    networks: "{{ loadbalancer_networks }}"
    published_ports:
      - 80:80
      - 443:443
    restart_policy: always
    volumes:
      - "/etc/consul-templates:/etc/consul-templates"
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/etc/nginx/conf.d:/etc/nginx/conf.d"
      - "/etc/service:/etc/service"
      - "{{ loadbalancer_webroot_path }}:{{ loadbalancer_webroot_path }}"

- name: Generate ssl certificates
  shell: docker run --rm --volumes-from {{ loadbalancer_container_name }} {{ loadbalancer_image }} certbot certonly -n --agree-tos -m {{ loadbalancer_owner_email }} -a webroot --webroot-path={{ loadbalancer_webroot_path }} -d {{ item }} creates=/etc/letsencrypt/live/{{ item }}/cert.pem
  with_items: "{{ loadbalancer_domains }}"
  when: "loadbalancer_domains and loadbalancer_owner_email"

- name: Add cron task to renew certificates
  cron:
    name: "renew letsencrypt certificates"
    job: "docker run --rm --volumes-from {{ loadbalancer_container_name }} {{ loadbalancer_image }} certbot renew >> /var/log/le-renew.log"
    weekday: 1
    hour: 2
    minute: 30

- name: Add cron task to reload nginx
  cron:
    name: "reload loadbalancer after renew"
    job: "docker restart {{ loadbalancer_container_name }}"
    weekday: 1
    hour: 2
    minute: 35
