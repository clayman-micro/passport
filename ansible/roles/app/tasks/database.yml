---

# Prepare app database

- name: Check app db user exist
  shell: "docker run --rm -e PGPASSWORD=\'{{ postgresql_password }}\' --net={{ postgresql_network }} {{ postgresql_image }} psql -h {{ postgresql_container_name }} -d {{ postgresql_database }} -U {{ postgresql_user }} -tAc \"SELECT 1 FROM pg_roles WHERE rolname=\'{{ app_postgresql_user }}\';\""
  register: output

- name: Create app db user
  shell: "docker run --rm -e PGPASSWORD=\'{{ postgresql_password }}\' --net={{ postgresql_network }} {{ postgresql_image }} psql -h {{ postgresql_container_name }} -d {{ postgresql_database }} -U {{ postgresql_user }} -c \"CREATE USER {{ app_postgresql_user }} WITH CREATEDB NOSUPERUSER PASSWORD '{{ app_postgresql_password }}';\""
  when: output.stdout.find('1') == -1

- name: Check app db exist
  shell: "docker run --rm -e PGPASSWORD=\'{{ postgresql_password }}\' --net={{ postgresql_network }} {{ postgresql_image }} psql -h {{ postgresql_container_name }} -d {{ postgresql_database }} -U {{ postgresql_user }} -tAc \"SELECT 1 FROM pg_database WHERE datname=\'{{ app_postgresql_database }}\';\""
  register: output

- name: Create app db
  shell: "docker run --rm -e PGPASSWORD=\'{{ postgresql_password }}\' --net={{ postgresql_network }} {{ postgresql_image }} psql -h {{ postgresql_container_name }} -d {{ postgresql_database }} -U {{ postgresql_user }} -c \"CREATE DATABASE {{ app_postgresql_database }} WITH OWNER {{ app_postgresql_user }};\""
  when: output.stdout.find('1') == -1
