name: Release and deploy

on:
  create:
    tags:
      - v*

jobs:
  run_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Install requirements
        # Устанавливаем зависимости
        run: pip install poetry tox

      - name: Run tests
        run: tox

  publish_image:
    needs: [run_tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Publish to Docker Repository
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ghcr.io/clayman-micro/shortner
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io
          tag_names: true

  deploy:
    needs: [publish_image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Prepare ansible config secrets
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          mkdir .ssh
          echo "$SSH_KEY" > .ssh/id_rsa
          chmod 600 .ssh/id_rsa

      - name: Prepare ansible vault password
        env:
          VAULT_PASSWORD: ${{ secrets.VAULT_PASSWORD  }}
        run: |
          echo "$VAULT_PASSWORD" > .vault_password
          chmod 600 .vault_password

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Deploy new version
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          ANSIBLE_VAULT_PASSWORD_FILE: .vault_password
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          PASSPORT_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          ansible-playbook -i ansible/inventory ansible/deploy.yml
